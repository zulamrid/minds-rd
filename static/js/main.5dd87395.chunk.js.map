{"version":3,"sources":["logo.svg","store/app/index.js","store/store.js","components/Draw/index.js","store/app/action.js","components/Screen/SideBarLeft/index.js","components/Screen/SideBarRight/index.js","components/Screen/index.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","buttons","shapes","image","selected","image_shape","selected_shape","item","reducer","state","action","type","payload","map","v","index","id","value","key","filter","i","combineReducers","Main","app","store","createStore","applyMiddleware","thunk","width","window","innerWidth","height","innerHeight","Rectangle","shapeProps","isSelected","onSelect","onChange","shapeRef","React","useRef","trRef","useEffect","current","nodes","getLayer","batchDraw","Fragment","onClick","onTap","ref","radius","draggable","onDragEnd","e","x","target","y","onTransformEnd","node","scaleX","scaleY","Math","max","boundBoxFunc","oldBox","newBox","Shape","Index","props","dispatch","useDispatch","useSelector","useState","selectedId","selectShape","selectedIdShape","selectShapeS","checkDeselect","getStage","hideSidebar","showSidebar","document","querySelector","style","right","onMouseDown","onTouchStart","backgroundImage","backgroundRepeat","backgroundSize","backgroundColor","rect","alert","label","console","log","newAttrs","rects","slice","className","color","JSON","stringify","changeDetail","updateDetail","length","defaultValue","event","hex","fill","App","urlImage","setUrlImage","selectedButton","selectedShape","_addImage","display","marginTop","justifyContent","margin","dispacth","deleteItem","padding","borderRadius","borderWidth","placeholder","uuidv4","opacity","Store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5dd87395.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\n\nconst initialState = {\n    buttons: [],\n    shapes: [],\n    image: '',\n    selected: '',\n    image_shape: '',\n    selected_shape: '',\n    item: ''\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"ADD_BUTTON\":\n            return {\n                ...state,\n                buttons: [...state.buttons, action.payload]\n            }\n        case \"UPDATE_BUTTON\":\n            return {\n                ...state,\n                buttons: state.buttons.map((v, index) =>\n                    v.id === action.payload.index.id ? { ...v, ...action.payload.value } : v\n                )\n            }\n        case \"UPDATE_DETAIL\":\n            return {\n                ...state,\n                buttons: state.buttons.map((v, index) =>\n                    v.id === action.payload.id ? { ...v, [action.payload.key]: action.payload.value } : v\n                )\n            }\n        case \"DELETE_BUTTON\":\n            return {\n                ...state,\n                buttons: state.buttons.filter((v, i) => i !== action.payload),\n                selected: ''\n            }\n        case \"SET_IMAGE\": {\n            return {\n                ...state,\n                image: action.payload\n            }\n        }\n        case \"SELECTED\": {\n            return {\n                ...state,\n                selected: action.payload,\n                item: 'button'\n            }\n        }\n        case \"REMOVE_BUTTON\":\n            return {\n                ...state,\n            }\n        case \"EDIT_BUTTON\":\n            return {\n                ...state\n            }\n        case \"ADD_SHAPE\":\n            return {\n                ...state,\n                shapes: [...state.shapes, action.payload]\n            }\n        case \"UPDATE_SHAPE\":\n            return {\n                ...state,\n                shapes: state.shapes.map((v, index) =>\n                    v.id === action.payload.index.id ? { ...v, ...action.payload.value } : v\n                )\n            }\n        case \"UPDATE_DETAIL_SHAPE\":\n            return {\n                ...state,\n                shapes: state.shapes.map((v, index) =>\n                    v.id === action.payload.id ? { ...v, [action.payload.key]: action.payload.value } : v\n                )\n            }\n        case \"DELETE_SHAPE\":\n            return {\n                ...state,\n                shapes: state.shapes.filter((v, i) => i !== action.payload),\n                selected_shape: ''\n            }\n        case \"SELECTED_SHAPE\": {\n            return {\n                ...state,\n                selected_shape: action.payload,\n                item: 'shape'\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport default reducer;","import {compose, createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\n\nimport app from './app';\n\nconst reducer = combineReducers({\n    Main: app,\n})\n\nconst store = createStore(reducer, {},  applyMiddleware(thunk));\n\nexport default store;","import React from 'react'\nimport { Stage, Layer, Rect, Circle, Transformer, Text } from 'react-konva';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { selected, selectedShape, updateButton, updateShape } from '../../store/app/action';\n\nconst width = window.innerWidth / 2\nconst height = window.innerHeight / 2\n\n\nconst Rectangle = ({ shapeProps, isSelected, onSelect, onChange }) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n\n  React.useEffect(() => {\n    if (isSelected) {\n      // we need to attach transformer manually\n      trRef.current.nodes([shapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n\n  return (\n    <React.Fragment>\n      <Rect\n        onClick={onSelect}\n        onTap={onSelect}\n        ref={shapeRef}\n        {...shapeProps}\n        radius={'10px'}\n        draggable\n        onDragEnd={(e) => {\n          onChange({\n            ...shapeProps,\n            x: e.target.x(),\n            y: e.target.y(),\n          });\n        }}\n        onTransformEnd={(e) => {\n          // transformer is changing scale of the node\n          // and NOT its width or height\n          // but in the store we have only width and height\n          // to match the data better we will reset scale on transform end\n          const node = shapeRef.current;\n          const scaleX = node.scaleX();\n          const scaleY = node.scaleY();\n\n          // we will reset it back\n          node.scaleX(1);\n          node.scaleY(1);\n          onChange({\n            ...shapeProps,\n            x: node.x(),\n            y: node.y(),\n            // set minimal value\n            width: Math.max(5, node.width() * scaleX),\n            height: Math.max(node.height() * scaleY),\n          });\n        }}\n      />\n      {isSelected && (\n        <Transformer\n          ref={trRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\n\nconst Shape = ({ shapeProps, isSelected, onSelect, onChange }) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n\n  React.useEffect(() => {\n    if (isSelected) {\n      // we need to attach transformer manually\n      trRef.current.nodes([shapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n\n  return (\n    <React.Fragment>\n      <Rect\n        onClick={onSelect}\n        onTap={onSelect}\n        ref={shapeRef}\n        {...shapeProps}\n        draggable\n        onDragEnd={(e) => {\n          onChange({\n            ...shapeProps,\n            x: e.target.x(),\n            y: e.target.y(),\n          });\n        }}\n        onTransformEnd={(e) => {\n          // transformer is changing scale of the node\n          // and NOT its width or height\n          // but in the store we have only width and height\n          // to match the data better we will reset scale on transform end\n          const node = shapeRef.current;\n          const scaleX = node.scaleX();\n          const scaleY = node.scaleY();\n\n          // we will reset it back\n          node.scaleX(1);\n          node.scaleY(1);\n          onChange({\n            ...shapeProps,\n            x: node.x(),\n            y: node.y(),\n            // set minimal value\n            width: Math.max(5, node.width() * scaleX),\n            height: Math.max(node.height() * scaleY),\n          });\n        }}\n      />\n      {isSelected && (\n        <Transformer\n          ref={trRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default function Index(props) {\n\n  const dispatch = useDispatch()\n\n  const buttons = useSelector(state => state.Main.buttons)\n  const shapes = useSelector(state => state.Main.shapes)\n  const image = useSelector(state => state.Main.image)\n\n  React.useEffect(() => {\n    // console.log(buttons.length)\n  }, [buttons, shapes])\n\n  const [rectangles, setRectangles] = React.useState(buttons);\n  const [selectedId, selectShape] = React.useState(null);\n  const [selectedIdShape, selectShapeS] = React.useState(null);\n\n  const checkDeselect = (e) => {\n    // deselect when clicked on empty area\n    const clickedOnEmpty = e.target === e.target.getStage();\n    if (clickedOnEmpty) {\n      selectShape(null);\n      selectShapeS(null)\n      hideSidebar()\n    }\n  };\n\n  const showSidebar = () => {\n    document.querySelector('.sidebar-right').style.right = 0\n  }\n\n  const hideSidebar = () => {\n    document.querySelector('.sidebar-right').style.right = '-400px'\n  }\n\n  return (\n    <Stage\n      width={width}\n      height={height}\n      onMouseDown={checkDeselect}\n      onTouchStart={checkDeselect}\n\n      // style={{ \n      //     backgroundImage:`url(${image})`,\n      //     backgroundRepeat: 'no-repeat',\n      //     backgroundSize: 'cover'\n      // }}\n      style={image !== '' ? {\n        backgroundImage: `url(${image})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover'\n      } : { backgroundColor: 'white' }}\n    >\n      <Layer>\n        {buttons.map((rect, i) => {\n          return (\n            <Rectangle\n              key={i}\n              shapeProps={rect}\n              onClick={() => alert(rect.label)}\n              isSelected={rect.id === selectedId}\n              onSelect={() => {\n                selectShape(rect.id);\n                selectShapeS(null)\n                console.log(i)\n                dispatch(selected(i))\n                showSidebar()\n              }}\n              onChange={(newAttrs) => {\n                const rects = buttons.slice();\n                //   rects[i] = newAttrs;\n                //   setRectangles(rects);\n\n                dispatch(updateButton(rects[i], newAttrs))\n              }}\n            />\n          );\n        })}\n\n        {shapes.map((rect, i) => {\n          return (\n            <Shape\n              key={i}\n              shapeProps={rect}\n              isSelected={rect.id === selectedIdShape}\n              onSelect={() => {\n                selectShapeS(rect.id);\n                selectShape(null);\n                dispatch(selectedShape(i))\n                showSidebar()\n              }}\n              onChange={(newAttrs) => {\n                const rects = shapes.slice();\n                //   rects[i] = newAttrs;\n                //   setRectangles(rects);\n                console.log(rects)\n                dispatch(updateShape(rects[i], newAttrs))\n              }}\n            />\n          );\n        })}\n      </Layer>\n    </Stage>\n  );\n}\n\n\n\n\n","import { v4 as uuidv4 } from 'uuid';\n\nexport const addButton = () => {\n    return (dispatch) => {\n        const payload = {\n            x: 10,\n            y: 10,\n            width: 180,\n            height: 80,\n            label: 'label1',\n            fill: '#0984e3',\n            id: uuidv4(),\n        }\n        dispatch({\n            type: 'ADD_BUTTON',\n            payload\n        })\n    }\n}\n\nexport const updateButton = (index, v) => {\n    return (dispatch) => {\n        const payload = {\n            index,\n            value: v\n        }\n\n        console.log(payload)\n\n        dispatch({\n            type: 'UPDATE_BUTTON',\n            payload\n        })\n    }\n}\n\nexport const selected = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: 'SELECTED',\n            payload\n        })\n    }\n}\n\nexport const setImage = (payload) => {\n    return (dispatch) => {\n        console.log(payload)\n        dispatch({\n            type: 'SET_IMAGE',\n            payload\n        })\n    }\n}\n\nexport const updateDetail = (payload) => {\n    return (dispatch) => {\n        console.log(payload)\n        dispatch({\n            type: 'UPDATE_DETAIL',\n            payload\n        })\n    }\n}\n\nexport const addShape = () => {\n    return (dispatch) => {\n        const payload = {\n            x: 10,\n            y: 10,\n            width: 200,\n            height: 200,\n            label: 'shape1',\n            fill: '#0984e3',\n            opacity: 0.5,\n            radius: 10,\n            radius: 70,\n            fill: 'red',\n            stroke: 'black',\n            strokeWidth: 4,\n            shadowColor: 'black',\n            shadowBlur: 10,\n            shadowOffset: { x: 10, y: 10 },\n            shadowOpacity: 0.5,\n            id: uuidv4(),\n        }\n        dispatch({\n            type: 'ADD_SHAPE',\n            payload\n        })\n    }\n}\n\nexport const updateShape = (index, v) => {\n    return (dispatch) => {\n        const payload = {\n            index,\n            value: v\n        }\n\n        console.log(payload)\n\n        dispatch({\n            type: 'UPDATE_SHAPE',\n            payload\n        })\n    }\n}\n\nexport const selectedShape = (payload) => {\n    return (dispatch) => {\n        dispatch({\n            type: 'SELECTED_SHAPE',\n            payload\n        })\n    }\n}\n\nexport const setImageShape = (payload) => {\n    return (dispatch) => {\n        console.log(payload)\n        dispatch({\n            type: 'SET_IMAGE_SHAPE',\n            payload\n        })\n    }\n}\n\nexport const updateDetailShape = (payload) => {\n    return (dispatch) => {\n        console.log(payload)\n        dispatch({\n            type: 'UPDATE_DETAIL_SHAPE',\n            payload\n        })\n    }\n}\n\nexport const deleteItem = (payload) => {\n    return(dispacth) => {\n        console.log(payload)\n        if(payload.item === 'button'){\n            dispacth({\n                type: 'DELETE_BUTTON',\n                payload: payload.selectedButton\n            })\n        }else{\n            dispacth({\n                type: 'DELETE_SHAPE',\n                payload: payload.selectedShape\n            })\n        }\n    }\n}\n\n","import React from 'react';\nimport './sidebar.css';\nimport { useSelector } from 'react-redux';\n\nexport default function Index() {\n\n    const buttons = useSelector(state => state.Main.buttons)\n    const shapes = useSelector(state => state.Main.shapes)\n    const image = useSelector(state => state.Main.image)\n\n    const cekButtons = () => {\n        console.log(buttons)\n    }\n\n    return (\n        <div className=\"sidebar\">\n             <pre style={{ color: '#fff' }}>\n              image: {image}\n            </pre>\n            <pre style={{ color: '#fff' }}>\n              buttons: {JSON.stringify(buttons, null, 2)}\n            </pre>\n            <pre style={{ color: '#fff' }}>\n              shapes: {JSON.stringify(shapes, null, 2)}\n            </pre>\n        </div>\n    )\n}\n","import React from 'react';\nimport './index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { PhotoshopPicker, TwitterPicker, SketchPicker, CirclePicker } from 'react-color';\nimport { updateDetail } from '../../../store/app/action';\n\n\nexport default function Index() {\n\n    const dispatch = useDispatch()\n    const selected = useSelector(state => state.Main.selected)\n    const buttons = useSelector(state => state.Main.buttons)\n    const [displayColor, setDisplayColor] = React.useState(false)\n\n    React.useEffect(() => {\n        console.log(selected)\n    }, [buttons])\n\n    const showDisplay = () => {\n        setDisplayColor(!displayColor)\n    }\n\n    const changeDetail = (index, key, value, id) => {\n        const payload = {\n            index,\n            key,\n            value,\n            id\n        }\n\n        dispatch(updateDetail(payload))\n    }\n\n    const popover = {\n        position: 'absolute',\n        zIndex: '2',\n    }\n    const cover = {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px',\n    }\n\n    const handleChangeComplete = (color, event) => {\n        changeDetail(selected, 'fill', color.hex, buttons[selected].id)\n    };\n\n    return (\n        <div className=\"sidebar-right\">\n            {buttons.length !== 0 ? selected !== '' ?\n                <div className=\"sidebar-right-container\">\n                    <div className=\"position\">\n                        <div className=\"form-container\">\n                            <div className=\"form\">\n                                <label>x</label>\n                                <input\n                                    defaultValue={buttons[selected].x}\n                                    onChange={e => changeDetail(selected, 'x', e.target.value, buttons[selected].id)}\n                                />\n                            </div>\n                            <div className=\"form\">\n                                <label>y</label>\n                                <input\n                                    type=\"text\"\n                                    // value={buttons[selected].y}\n                                    defaultValue={buttons[selected].y}\n                                    onChange={e => changeDetail(selected, 'y', e.target.value, buttons[selected].id)}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-container\">\n                            <div className=\"form\">\n                                <label>Height</label>\n                                <input\n                                    defaultValue={buttons[selected].height}\n                                    onChange={e => changeDetail(selected, 'height', e.target.value, buttons[selected].id)}\n                                />\n                            </div>\n                            <div className=\"form\">\n                                <label>Width</label>\n                                <input\n                                    defaultValue={buttons[selected].width}\n                                    onChange={e => changeDetail(selected, 'width', e.target.value, buttons[selected].id)}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"position\">\n                        <div className=\"form-container\">\n                            <div className=\"form\">\n                                <label>x</label>\n                                <input\n                                    defaultValue={buttons[selected].x}\n                                    onChange={e => changeDetail(selected, 'x', e.target.value, buttons[selected].id)}\n                                />\n                            </div>\n                            <div className=\"form\">\n                                <label>y</label>\n                                <input\n                                    type=\"text\"\n                                    // value={buttons[selected].y}\n                                    defaultValue={buttons[selected].y}\n                                    onChange={e => changeDetail(selected, 'y', e.target.value, buttons[selected].id)}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-container\">\n                            <div className=\"form\">\n                                <label>Height</label>\n                                <input\n                                    defaultValue={buttons[selected].height}\n                                    onChange={e => changeDetail(selected, 'height', e.target.value, buttons[selected].id)}\n                                />\n                            </div>\n                            <div className=\"form\">\n                                <label>Width</label>\n                                <input\n                                    defaultValue={buttons[selected].width}\n                                    onChange={e => changeDetail(selected, 'width', e.target.value, buttons[selected].id)}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"position\">\n                        <TwitterPicker onChange={handleChangeComplete} color={buttons[selected].fill}  />\n                    </div>\n                </div>\n                : <></> : <></>\n\n            }\n            {/* // <table>\n                //     <tr>\n                //         <td>x</td>\n                //         <td> y </td>\n\n                //     </tr>\n                //     <tr>\n                //         <td>\n                //             <input\n                //                 defaultValue={buttons[selected].y}\n                //                 onChange={e => changeDetail(selected, 'y', e.target.value, buttons[selected].id)}\n                //             />\n                //         </td>\n                //         <td>\n                //             <input\n                //                 type=\"text\"\n                //                 name=\"any2\"\n                //                 defaultValue={buttons[selected].x}\n                //                 onChange={e => changeDetail(selected, 'x', e.target.value, buttons[selected].id)}\n                //             /></td>\n                //     </tr>\n                //     <tr>\n                //         <td>Width</td>\n                //         <td>Height</td>\n\n                //     </tr>\n                //     <tr>\n                //         <td>\n                //             <input\n                //                 defaultValue={buttons[selected].height}\n                //                 onChange={e => changeDetail(selected, 'height', parseInt(e.target.value), buttons[selected].id)}\n                //             />\n                //         </td>\n                //         <td>\n                //             <input\n                //                 defaultValue={buttons[selected].width}\n                //                 onChange={e => changeDetail(selected, 'width', parseInt(e.target.value), buttons[selected].id)}\n                //             />\n                //         </td>\n                //     </tr>\n                //     <tr>\n                //         <td>Color</td>\n                //     </tr>\n                //     <tr>\n                //         <td>\n                //             <input\n                //                 defaultValue={buttons[selected].fill}\n                //                 onChange={e => changeDetail(selected, 'fill', e.target.value, buttons[selected].id)}\n                //             />\n                //         </td>\n                //     </tr>\n                // </table>\n                // :\n                // <></>\n                // :\n                // <></> */}\n        </div>\n    )\n}\n","import React from 'react';\nimport './../../App.css';\nimport Draw from './../Draw/index';\nimport SidebarLeft from './SideBarLeft';\nimport SidebarRight from './SideBarRight';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addButton, addShape, setImage, deleteItem } from '../../store/app/action';\n\nfunction App() {\n  const dispatch = useDispatch()\n  const [urlImage, setUrlImage] = React.useState('')\n\n  const buttons = useSelector(state => state.Main.buttons)\n  const selectedButton = useSelector(state => state.Main.selected)\n  const selectedShape = useSelector(state => state.Main.selected_shape)\n  const item = useSelector(state => state.Main.item)\n\n  React.useEffect(() => {\n    console.log(selectedShape)\n    console.log(selectedButton)\n    console.log(item)\n    console.log(buttons)\n  }, [selectedShape, selectedButton, item, buttons])\n\n  const _addImage = () => {\n    dispatch(setImage(urlImage))\n    setUrlImage('')\n  }\n\n  const _addButtons = () => {\n    dispatch(addButton())\n  }\n\n  const _addShapes = () => {\n    dispatch(addShape())\n  }\n\n  const _deleteItem = () => {\n    const payload = {\n      item,\n      selectedButton,\n      selectedShape\n    }\n\n    dispatch(deleteItem(payload))\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"sidebar-container\">\n        <SidebarLeft />\n      </div>\n      <div className=\"main\">\n        <Draw />\n        <div>\n          <div style={{\n            display: 'flex',\n            width: '100%',\n            marginTop: 20,\n            justifyContent: 'flex-end'\n          }}>\n            {item === '' ? <></> :\n              <>\n                <div\n                  className=\"button\"\n                  style={{ width: '15%', margin: 3, backgroundColor: '#0984e3' }}\n                  onClick={_addImage}\n                >\n                  Clone\n                </div>\n                <div\n                  className=\"button\"\n                  style={{ width: '15%', margin: 3, backgroundColor: '#d63031' }}\n                  onClick={_deleteItem}\n                >\n                  Delete\n                </div>\n              </>\n            }\n          </div>\n          <div style={{\n            display: 'flex',\n            width: '100%',\n            marginTop: 20,\n\n          }}>\n            <input\n              style={{ padding: 5, width: '80%', borderRadius: 5, borderWidth: 0 }}\n              placeholder=\"Paste image link here\"\n              value={urlImage}\n              onChange={e => setUrlImage(e.target.value)}\n            />\n            <div\n              className=\"button\"\n              style={{ width: '15%', margin: 3 }}\n              onClick={_addImage}\n            >\n              Save\n            </div>\n          </div>\n          <div className=\"button\" onClick={_addButtons}>\n            Add button\n          </div>\n          <div className=\"button\" onClick={_addShapes}>\n            Add Shape\n          </div>\n          <div className=\"button\">\n            Add Text\n          </div>\n          <div className=\"button\">\n            Add Image / Logo\n          </div>\n        </div>\n      </div>\n      <div className=\"sidebar-container\">\n        <SidebarRight />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n","import logo from './logo.svg';\nimport './App.css';\nimport { Provider } from 'react-redux';\n\nimport Store from './store/store';\nimport RootApp from './components/Screen';\n\nfunction App() {\n    return (\n        <Provider store={Store}>\n            <RootApp />\n        </Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}